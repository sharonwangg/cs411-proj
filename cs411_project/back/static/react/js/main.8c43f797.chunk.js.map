{"version":3,"sources":["logo.svg","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","isLoginOpen","isRegisterOpen","this","setState","className","onClick","showLoginBox","bind","showRegisterBox","Component","LoginBox","e","htmlFor","type","name","placeholder","submitLogin","RegisterBox","username","email","age","password","target","value","actiom","methods","onChange","onUsernameChange","onEmailChange","onAgeChange","onPasswordChange","submitRegister","App","to","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"js/main.8c43f797.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.2d27ead7.svg\";","import React, {Component} from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n\r\nexport default class Login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {isLoginOpen: true, isRegisterOpen: false};\r\n    }\r\n\r\n    showLoginBox(){\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n    }\r\n\r\n    showRegisterBox(){\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div className = \"root-container\">\r\n\r\n            <div className = \"box-controller\">\r\n                <div className = {\"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\")} onClick = {this.showLoginBox.bind(this)}>\r\n                    Login\r\n                </div>\r\n                <div className = {\"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\")} onClick = {this.showRegisterBox.bind(this)}>\r\n                    Register\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"box-container\">\r\n                {this.state.isLoginOpen && <LoginBox />}\r\n                {this.state.isRegisterOpen && <RegisterBox />}\r\n            </div>\r\n        </div>\r\n    ); \r\n    }\r\n}\r\n\r\nclass LoginBox extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {};\r\n    }\r\n\r\n    submitLogin(e){\r\n        \r\n    }\r\n    render(){\r\n    return(\r\n        <div className = \"inner-container\">\r\n            <div className= \"header\">\r\n                Login\r\n            </div>\r\n\r\n            <div className = \"box\">\r\n\r\n                <div className = 'input-group'>\r\n                    <label htmlFor = \"username\">\r\n                        Username\r\n                    </label>\r\n                    <input type = \"text\" name =  \"username\" className = \"login-input\" placeholder = \"Username\">\r\n                    </input>\r\n                </div>\r\n\r\n                <div className = 'input-group'>\r\n                    <label htmlFor = \"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type = \"password\" name =  \"password\" className = \"login-input\" placeholder = \"Password\">\r\n                    </input>\r\n                </div>\r\n\r\n                <button type = \"button\" className = \"login-btn\" onClick = {this.submitLogin.bind(this)}>\r\n                    Login\r\n                </button>\r\n            </div>\r\n        </div>   \r\n    );\r\n    }\r\n}\r\n\r\nclass RegisterBox extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            username: \"\",\r\n            email: \"\",\r\n            age: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    onUsernameChange(e){\r\n        this.setState({username: e.target.value});\r\n    }\r\n\r\n    onEmailChange(e){\r\n        this.setState({email: e.target.value});\r\n    }\r\n\r\n    onAgeChange(e){\r\n        this.setState({age: e.target.value});\r\n    }\r\n    \r\n    onPasswordChange(e){\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    submitRegister(e){\r\n        \r\n    }\r\n    render(){\r\n    return(\r\n        <div className = \"inner-container\">\r\n            <div className= \"header\">\r\n                Register\r\n            </div>\r\n            <form actiom = \"/\" methods = \"POST\">\r\n\r\n                <div className = 'form-group'>\r\n                    <label htmlFor = \"username\">\r\n                        Username\r\n                    </label>\r\n                    <input type = \"text\" name =  \"username\" className = \"login-input\" placeholder = \"Username\" onChange = {this.onUsernameChange.bind(this)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div className = 'form-group'>\r\n                    <label htmlFor = \"email\">\r\n                        E-mail\r\n                    </label>\r\n                    <input type = \"text\" name =  \"email\" className = \"login-input\" placeholder = \"Email\" onChange = {this.onEmailChange.bind(this)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div className = 'form-group'>\r\n                    <label htmlFor = \"age\">\r\n                        Age\r\n                    </label>\r\n                    <input type = \"text\" name =  \"age\" className = \"login-input\" placeholder = \"Age\" onChange = {this.onAgeChange.bind(this)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div className = 'form-group'>\r\n                    <label htmlFor = \"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type = \"password\" name =  \"password\" className = \"login-input\" placeholder = \"Password\" onChange = {this.onPasswordChange.bind(this)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <button type = \"button\" className = \"login-btn\" onClick = {this.submitRegister.bind(this)}>\r\n                    Register\r\n                </button>\r\n            </form>\r\n        </div> \r\n    );  \r\n    }\r\n}\r\n\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Login from './components/Login'\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div>\r\n            <Link to = '/'>Home</Link> <Link to ='/login'>Login</Link>\r\n          </div>\r\n          <Switch>\r\n            <Route component = {Login} path = \"/login\"/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n    );\r\n  }\r\n \r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Login from './components/Login';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrender(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}